1、设置/修改自己的用户名和邮箱
	$ git config --global user.name "YLJ"
	$ git config --global user.email "ylj.lifesea.com"
2、查看自己的用户名、邮箱
	$ git config user.name
	$ git config user.email
3、创建目录  mkdir
	注意要想在哪个目录下创建文件夹就要进入到该目录
4、进入到该目录  cd E:/learngit
5、显示当前目录  pwd
6、进入该目录，将该目录变成Git可以管理的仓库
	$ git init
7、所有的版本控制系统，其实只能跟踪文本文件的改动，比如TXT文件，网页，所有的程序代码等等。二进制文件	五分总文件的变化
8、将文件添加到Git仓库中
	首先将文件放到仓库的文件夹下，或者子文件夹下
	然后$ git add "文件名"
	再提交$ git commit -m "文件修改说明"
	每次提交仓库都要执行这两部
9、查看仓库当前状态  $ git status
10、提交之前查看该分支修改的文件与仓库中文件的不同
	$ git diff
11、查看Git版本日志  $ git log
12、回退版本   HEAD表示当前版本  HEAD^表示下一个版本 HEAD^^表示下下个版本   HEAD~3倒数第三个版本
	$ git reset --hard HEAD^
	$ git reset --hard commit_id(版本号：只写前几位就可以了)  版本号通过 Git log命令查找
13、Git的版本回退速度非常快，因为Git在内部有个指向当前版本的HEAD指针，当你回退版本的时候，Git仅仅是把	HEAD从指向当前版本号改为指向你要指向的版本号，然后顺便把工作区的文件更新了
14、查看命令历史 $ git reflog
15、工作区（work Directory）:电脑里能看到的目录
	暂存区（Repository）:隐藏目录 .git 文件
16、git diff HEAD -- readme.txt命令可以查看工作区和版本库里面最新版本的区别（没用懂）
17、弃工作区的修改： git checkout -- file
一、 自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；
二、 已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。
总之，就是让这个文件回到最近一次git commit或git add时的状态。
--很重要，没有--，就变成了“切换到另一个分支”的命令
18、丢弃暂存区的修改，重新放回工作区： git reset HEAD file













































